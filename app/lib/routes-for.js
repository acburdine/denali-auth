export default function authRoutesFor(modelName, router) {

  let Model = router.container.lookup(`model:${ modelName }`);

  // Grab the private config that is generated by our mixins, stored under our
  // private Symbol.
  let config = Model[authNamespace];

  // Generate the root namespace for all the auth related routes we will be
  // adding. Defaults to type/auth, so for the User model, it would be
  // `users/auth/*`.
  let namespace = router.namespace(config.namespace || pluralize(modelName) + '/auth');

  // Registerable
  // Adds routes that allow for users to register a new account
  if (config.isRegisterable) {
    namespace.post('/register', 'auth/registerable/register');
  }

  // Confirmable
  // Adds routes that allow for users to confirm their email address
  if (config.isConfirmable) {
    namespace.post('/confirm-email', 'auth/confirmable/confirm-email');
    namespace.post('/send-email-confirmation', 'auth/confirmable/send-email-confirmation');
  }

  // Resetable
  // Adds routes that allow users to reset their passwords
  if (config.isResetable) {
    namespace.post('/reset-password', 'auth/resetable/reset-password');
    namespace.post('/send-reset-password', 'auth/resetable/send-reset-password');
  }

  // Authenticable
  // Adds routes allowing users to authenticate and establish a session
  namespace.post('/authenticate', 'auth/authenticable/authenticate');

}
